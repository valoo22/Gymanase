/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Fenêtre;
import Metier.Reservation;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
/**
 *
 * @author Valoo
 */
public class FSelectReservationA extends FMaster
{
    ResultSet rs1, rs2;
    PreparedStatement ps, ps1;
    String RefAssoc, RefSalle, Reserv, SDate , SHeure;
    SimpleDateFormat sdfDate = new SimpleDateFormat("yyyy-MM-dd");
    SimpleDateFormat sdfHeure = new SimpleDateFormat("HH");
    Date Date, Heure, avant , apres;

    public FSelectReservationA() throws ParseException
    {
        initComponents();
        avant = sdfHeure.parse("08");
        apres = sdfHeure.parse("18");
        SpinnerDateModel model = new SpinnerDateModel(avant,avant,apres,Calendar.HOUR);
        model.setCalendarField(Calendar.MINUTE);
        sHeure.setModel(model);
        sHeure.setEditor(new JSpinner.DateEditor(sHeure, "HH"));
        for (int i = 0; i < Reservation.getNbrereservation(); i++) 
        {
            Reservation Re = Reservation.getUneReservation(i);
            cbxReserv.addItem(Re.affich());
        }
        try 
        {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/gymnase", "root", "" );
            ps = conn.prepareStatement(pilote);
            rs1 = ps.executeQuery("Select refAsso from association");
            while (rs1.next()) 
            {                
                cbxAssoc.addItem(rs1.getString("refAsso"));
            }
            ps1 = conn.prepareStatement(pilote);
            rs2 = ps.executeQuery("Select refSalle from salle");
            while (rs2.next()) 
            {                
                cbxSalle.addItem(rs2.getString("refSalle"));
            }
        } 
        catch (SQLException e) 
        {
            JOptionPane.showMessageDialog(null,"Erreur Sql: " + e.getMessage(),"Erreur SQL" , JOptionPane.ERROR_MESSAGE);
        }
    }
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitre = new javax.swing.JLabel();
        btnModifier = new javax.swing.JButton();
        btnSupprimer = new javax.swing.JButton();
        lblReservation = new javax.swing.JLabel();
        lblAssoc = new javax.swing.JLabel();
        lblSalle = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        lblHeure = new javax.swing.JLabel();
        cbxReserv = new javax.swing.JComboBox<>();
        cbxAssoc = new javax.swing.JComboBox<>();
        cbxSalle = new javax.swing.JComboBox<>();
        sHeure = new javax.swing.JSpinner();
        dpDate = new org.jdesktop.swingx.JXDatePicker();
        lblH = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Selectionnez une réservation dans l'application");

        lblTitre.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        lblTitre.setForeground(new java.awt.Color(0, 255, 0));
        lblTitre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitre.setText("Selectionnez Une Reservation dans l'Application");

        btnModifier.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btnModifier.setText("Modifier");
        btnModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifierActionPerformed(evt);
            }
        });

        btnSupprimer.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btnSupprimer.setText("Supprimer");
        btnSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupprimerActionPerformed(evt);
            }
        });

        lblReservation.setFont(new java.awt.Font("Dialog", 1, 21)); // NOI18N
        lblReservation.setText("Réservation : ");

        lblAssoc.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblAssoc.setText("Associations : ");

        lblSalle.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblSalle.setText("Salle :");

        lblDate.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblDate.setText("Date : ");

        lblHeure.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblHeure.setText("Heure : ");

        cbxReserv.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        cbxReserv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxReservActionPerformed(evt);
            }
        });

        cbxAssoc.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        cbxSalle.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        sHeure.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        dpDate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        dpDate.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        java.util.Date date = new Date();
        dpDate.getMonthView().setLowerBound(date);

        lblH.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblH.setText("H");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSupprimer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnModifier))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblReservation)
                        .addGap(18, 18, 18)
                        .addComponent(cbxReserv, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblAssoc)
                        .addGap(18, 18, 18)
                        .addComponent(cbxAssoc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSalle)
                        .addGap(18, 18, 18)
                        .addComponent(cbxSalle, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblHeure)
                        .addGap(18, 18, 18)
                        .addComponent(sHeure, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblH)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDate)
                        .addGap(18, 18, 18)
                        .addComponent(dpDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitre)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxReserv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAssoc)
                    .addComponent(cbxAssoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSalle)
                    .addComponent(cbxSalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDate)
                    .addComponent(dpDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHeure)
                    .addComponent(sHeure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblH))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModifier)
                    .addComponent(btnSupprimer))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbxReservActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxReservActionPerformed
        Reserv = cbxReserv.getSelectedItem().toString();
        String[] ReservSplit = Reserv.split("/");
        RefAssoc = ReservSplit[0];
        RefSalle = ReservSplit[1];
        SDate = ReservSplit[2];
        SHeure = ReservSplit[3];
        try 
        {
            Date = sdfDate.parse(SDate);
            Heure = sdfHeure.parse(SHeure);
        } 
        catch (ParseException ex) 
        {
            Logger.getLogger(FSelectReservationA.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        for (int i = 0; i < cbxAssoc.getItemCount(); i++) 
            {
                if (cbxAssoc.getItemAt(i).equals(RefAssoc)) 
                    {
                        cbxAssoc.setSelectedIndex(i);
                    }
            }
        for (int i = 0; i < cbxSalle.getItemCount(); i++) 
            {
                if (cbxSalle.getItemAt(i).equals(RefSalle)) 
                    {
                        cbxSalle.setSelectedIndex(i);
                    }
            }
        dpDate.setDate(Date);
        for (int i = 0; i < sHeure.getComponentCount(); i++) 
            {
                if (sHeure.getComponent(i).equals(SHeure)) 
                    {
                        SpinnerDateModel model = new SpinnerDateModel(Heure,avant,apres,Calendar.HOUR);
                        sHeure.setModel(model);
                    }
            }
    }//GEN-LAST:event_cbxReservActionPerformed

    private void btnModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifierActionPerformed
        int Conf = JOptionPane.showConfirmDialog(null, "Voulez vous modifier la réservation : " + Reserv + " présent dans l'aplication ?", "Confirmer modification?", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (Conf == JOptionPane.YES_OPTION)
        {
            Reservation Nre= new Reservation(cbxSalle.getSelectedItem().toString(), sdfDate.format(dpDate.getDate()), (Date)sHeure.getValue() , cbxAssoc.getSelectedItem().toString());
            Reservation.UpdateUneReservation(cbxReserv.getSelectedIndex(), Nre);
            JOptionPane.showMessageDialog(null, "La Réservation a bien été modifié !", "Réservation Modifié", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnModifierActionPerformed

    private void btnSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupprimerActionPerformed
        int Conf = JOptionPane.showConfirmDialog(null, "Voulez vous supprimer la réservation : " + Reserv + " présent dans l'aplication ?", "Confirmer suppression?", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (Conf == JOptionPane.YES_OPTION)
        {
            Reservation.SuprimerUnereservation(cbxReserv.getSelectedIndex());
            JOptionPane.showMessageDialog(null, "La Réservation a bien été supprimée !", "Réservation Suprimé", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnSupprimerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(FSelectReservationA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(FSelectReservationA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(FSelectReservationA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(FSelectReservationA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> 
        {
            try
            {
                new FSelectReservationA().setVisible(true);
            }
            catch (ParseException ex)
            {
                Logger.getLogger(FSelectReservationA.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnModifier;
    private javax.swing.JButton btnSupprimer;
    private javax.swing.JComboBox<String> cbxAssoc;
    private javax.swing.JComboBox<String> cbxReserv;
    private javax.swing.JComboBox<String> cbxSalle;
    private org.jdesktop.swingx.JXDatePicker dpDate;
    private javax.swing.JLabel lblAssoc;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblH;
    private javax.swing.JLabel lblHeure;
    private javax.swing.JLabel lblReservation;
    private javax.swing.JLabel lblSalle;
    private javax.swing.JLabel lblTitre;
    private javax.swing.JSpinner sHeure;
    // End of variables declaration//GEN-END:variables
}
